$date
	Mon Aug 04 10:52:14 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module carry_save_adder_tb $end
$var wire 5 ! final_sum [4:0] $end
$var reg 4 " A [3:0] $end
$var reg 4 # B [3:0] $end
$var reg 4 $ C [3:0] $end
$scope module uut $end
$var wire 4 % A [3:0] $end
$var wire 4 & B [3:0] $end
$var wire 4 ' C [3:0] $end
$var wire 5 ( final_sum [4:0] $end
$var wire 4 ) SUM [3:0] $end
$var wire 4 * COUT [3:0] $end
$scope module F1 $end
$var wire 1 + a $end
$var wire 1 , b $end
$var wire 1 - cin $end
$var wire 1 . cout $end
$var wire 1 / sum $end
$upscope $end
$scope module F2 $end
$var wire 1 0 a $end
$var wire 1 1 b $end
$var wire 1 2 cin $end
$var wire 1 3 cout $end
$var wire 1 4 sum $end
$upscope $end
$scope module F3 $end
$var wire 1 5 a $end
$var wire 1 6 b $end
$var wire 1 7 cin $end
$var wire 1 8 cout $end
$var wire 1 9 sum $end
$upscope $end
$scope module F4 $end
$var wire 1 : a $end
$var wire 1 ; b $end
$var wire 1 < cin $end
$var wire 1 = cout $end
$var wire 1 > sum $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
b0 *
b0 )
b0 (
b0 '
b0 &
b0 %
b0 $
b0 #
b0 "
b0 !
$end
#20
13
1.
b1110 !
b1110 (
b111 *
18
12
17
1,
11
1+
15
b110 $
b110 '
b11 #
b11 &
b101 "
b101 %
#30
1=
0.
b1010 *
08
b11000 !
b11000 (
b100 )
19
07
1<
0,
01
16
1;
0+
10
05
b1010 $
b1010 '
b1100 #
b1100 &
b10 "
b10 %
#40
